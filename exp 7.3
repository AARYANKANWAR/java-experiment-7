----- PART 1: MODEL (Student Class) -----
// Student.java
public class Student {
    private int studentId;
    private String name;
    private String department;
    private double marks;

    // Constructor
    public Student(int studentId, String name, String department, double marks) {
        this.studentId = studentId;
        this.name = name;
        this.department = department;
        this.marks = marks;
    }

    // Getters and Setters
    public int getStudentId() { return studentId; }
    public void setStudentId(int studentId) { this.studentId = studentId; }

    public String getName() { return name; }
    public void setName(String name) { this.name = name; }

    public String getDepartment() { return department; }
    public void setDepartment(String department) { this.department = department; }

    public double getMarks() { return marks; }
    public void setMarks(double marks) { this.marks = marks; }

    @Override
    public String toString() {
        return "Student ID: " + studentId + ", Name: " + name +
               ", Department: " + department + ", Marks: " + marks;
    }
}

----- PART 2: CONTROLLER (StudentDAO Class) -----
// StudentDAO.java
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class StudentDAO {
    private Connection conn;

    // Establish connection to MySQL database
    public StudentDAO() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/StudentDB", "root", "your_password");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Add a new student record
    public void addStudent(Student student) {
        String sql = "INSERT INTO students (studentId, name, department, marks) VALUES (?, ?, ?, ?)";
        try (PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setInt(1, student.getStudentId());
            ps.setString(2, student.getName());
            ps.setString(3, student.getDepartment());
            ps.setDouble(4, student.getMarks());
            ps.executeUpdate();
            System.out.println("‚úÖ Student added successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Retrieve all student records
    public List<Student> getAllStudents() {
        List<Student> students = new ArrayList<>();
        String sql = "SELECT * FROM students";
        try (Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery(sql)) {
            while (rs.next()) {
                students.add(new Student(
                    rs.getInt("studentId"),
                    rs.getString("name"),
                    rs.getString("department"),
                    rs.getDouble("marks")
                ));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return students;
    }

    // Update existing student details
    public void updateStudent(Student student) {
        String sql = "UPDATE students SET name=?, department=?, marks=? WHERE studentId=?";
        try (PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setString(1, student.getName());
            ps.setString(2, student.getDepartment());
            ps.setDouble(3, student.getMarks());
            ps.setInt(4, student.getStudentId());
            ps.executeUpdate();
            System.out.println("‚úÖ Student updated successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Delete a student record
    public void deleteStudent(int studentId) {
        String sql = "DELETE FROM students WHERE studentId=?";
        try (PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setInt(1, studentId);
            ps.executeUpdate();
            System.out.println("‚úÖ Student deleted successfully!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
----- PART 3: VIEW (Main Class) -----
// Main.java
import java.util.List;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        StudentDAO dao = new StudentDAO();

        while (true) {
            System.out.println("\n===== Student Management System =====");
            System.out.println("1. Add Student");
            System.out.println("2. View All Students");
            System.out.println("3. Update Student");
            System.out.println("4. Delete Student");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = sc.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter Student ID: ");
                    int id = sc.nextInt();
                    sc.nextLine();
                    System.out.print("Enter Name: ");
                    String name = sc.nextLine();
                    System.out.print("Enter Department: ");
                    String dept = sc.nextLine();
                    System.out.print("Enter Marks: ");
                    double marks = sc.nextDouble();

                    Student newStudent = new Student(id, name, dept, marks);
                    dao.addStudent(newStudent);
                    break;

                case 2:
                    List<Student> list = dao.getAllStudents();
                    System.out.println("\n--- Student List ---");
                    for (Student s : list) {
                        System.out.println(s);
                    }
                    break;

                case 3:
                    System.out.print("Enter Student ID to Update: ");
                    int uid = sc.nextInt();
                    sc.nextLine();
                    System.out.print("Enter New Name: ");
                    String newName = sc.nextLine();
                    System.out.print("Enter New Department: ");
                    String newDept = sc.nextLine();
                    System.out.print("Enter New Marks: ");
                    double newMarks = sc.nextDouble();

                    dao.updateStudent(new Student(uid, newName, newDept, newMarks));
                    break;

                case 4:
                    System.out.print("Enter Student ID to Delete: ");
                    int did = sc.nextInt();
                    dao.deleteStudent(did);
                    break;

                case 5:
                    System.out.println("Exiting... üëã");
                    sc.close();
                    System.exit(0);
                    break;

                default:
                    System.out.println("‚ùå Invalid Choice! Try again.");
            }
        }
    }
}
